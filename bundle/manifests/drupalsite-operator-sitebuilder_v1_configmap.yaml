apiVersion: v1
data:
  settings.php: "<?php\n// @codingStandardsIgnoreFile\n// Database settings.\n$databases['default']['default']
    = [\n  'host' => getenv('dbHost'),\n  'port' => getenv('dbPort'),\n  'database'
    =>  getenv('dbName'),\n  'username' => getenv('dbUser'),\n  'password' => getenv('dbPassword'),\n
    \ 'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql',\n  'driver' => 'mysql',\n
    \ 'prefix' => '',\n  'collation' => 'utf8mb4_general_ci',\n];\n\n\n// Location
    of the site configuration files.\n$settings['config_sync_directory'] = '../config/sync';\n\n//
    Configure file paths\n// Private file paths.\n$settings['file_private_path'] =
    getenv('DRUPAL_SHARED_VOLUME') . '/private';\n// Configure tmp folder\n$settings['file_temp_path']
    = '/tmp';\n\n// Configure feeds tmp folder\n// Fix: https://www.drupal.org/project/feeds/issues/2912130\nif
    (isset($config['system.file']) && !is_null($config['system.file']['path']['temporary']))\n{\n
    \ $config['system.file']['path']['temporary'] = getenv('DRUPAL_SHARED_VOLUME')
    . \"/private/feeds/tmp\";\n}\n\n// Config trusted host pattern\n$trusted_host_pattern=\"^\".
    str_replace(\".\",\"\\.\",getenv('HOSTNAME')) . \"$\";\n$settings['trusted_host_patterns']
    = [ '.*' ];\n\n// Salt for one-time login links, cancel links, form tokens, etc.\n$settings['hash_salt']
    = hash(\"sha256\",getenv('dbName') . getenv('dbUser') . getenv('dbPasswordgit
    \ '));\n/**\n * Load services definition file.\n */\n$settings['container_yamls'][]
    = $app_root . '/' . $site_path . '/services.yml';\n/**\n * The default list of
    directories that will be ignored by Drupal's file API.\n *\n * By default ignore
    node_modules folders to avoid issues\n * with common frontend tools and recursive
    scanning of directories looking for\n * extensions.\n *\n * @see file_scan_directory()\n
    * @see \\Drupal\\Core\\Extension\\ExtensionDiscovery::scanDirectory()\n */\n$settings['file_scan_ignore_directories']
    = [\n  'node_modules',\n];\n\n/**\n * Redis Configuration.\n * @See https://pantheon.io/docs/redis/
    > No Keys Found\n * @See also https://gist.github.com/keopx/7d5fe4d7a890c792c43bb79cf56718e0\n
    * @ See also https://docs.platform.sh/frameworks/drupal8/redis.html\n */\n\nif
    (extension_loaded('redis')) {\n  // Set Redis as the default backend for any cache
    bin not otherwise specified.\n  $settings['cache']['default'] = 'cache.backend.redis';\n
    \ $settings['redis.connection']['interface'] = 'PhpRedis';\n  $settings['redis.connection']['host']
    = 'redis.' . getenv('NAMESPACE') . '.svc.cluster.local';\n  $settings['redis.connection']['port']
    = getenv('REDIS_SERVICE_PORT');\n  \n  // Allow the services to work before the
    Redis module itself is enabled.\n  $settings['container_yamls'][] = 'modules/contrib/redis/redis.services.yml';\n
    \ // Manually add the classloader path, this is required for the container cache
    bin definition below\n  // and allows to use it without the redis module being
    enabled.\n  $class_loader->addPsr4('Drupal\\\\redis\\\\', 'modules/contrib/redis/src');\n
    \ // Use redis for container cache.\n  // The container cache is used to load
    the container definition itself, and\n  // thus any configuration stored in the
    container itself is not available\n  // yet. These lines force the container cache
    to use Redis rather than the\n  // default SQL cache.\n  $settings['bootstrap_container_definition']
    = [\n    'parameters' => [],\n    'services' => [\n      'redis.factory' => [\n
    \       'class' => 'Drupal\\redis\\ClientFactory',\n      ],\n      'cache.backend.redis'
    => [\n        'class' => 'Drupal\\redis\\Cache\\CacheBackendFactory',\n        'arguments'
    => ['@redis.factory', '@cache_tags_provider.container', '@serialization.phpserialize'],\n
    \     ],\n      'cache.container' => [\n        'class' => '\\Drupal\\redis\\Cache\\PhpRedis',\n
    \       'factory' => ['@cache.backend.redis', 'get'],\n        'arguments' =>
    ['container'],\n      ],\n      'cache_tags_provider.container' => [\n        'class'
    => 'Drupal\\redis\\Cache\\RedisCacheTagsChecksum',\n        'arguments' => ['@redis.factory'],\n
    \     ],\n      'serialization.phpserialize' => [\n        'class' => 'Drupal\\Component\\Serialization\\PhpSerialize',\n
    \     ],\n    ],\n  ];\n  \n  /** Optional prefix for cache entries */\n  $settings['cache_prefix']
    = getenv('NAMESPACE');\n  \n  /** @see: https://pantheon.io/docs/redis/ */\n  //
    Always set the fast backend for bootstrap, discover and config, otherwise\n  //
    this gets lost when redis is enabled.\n  $settings['cache']['bins']['bootstrap']
    = 'cache.backend.chainedfast';\n  $settings['cache']['bins']['discovery'] = 'cache.backend.chainedfast';\n
    \ $settings['cache']['bins']['config'] = 'cache.backend.chainedfast';\n  /** @see:
    https://github.com/md-systems/redis */\n  // Use for all bins otherwise specified.\n
    \ $settings['cache']['default'] = 'cache.backend.redis';\n  // Use this to only
    use it for specific cache bins.\n  $settings['cache']['bins']['render'] = 'cache.backend.redis';\n
    \ // Use for all queues unless otherwise specified for a specific queue.\n  $settings['queue_default']
    = 'queue.redis';\n  // Or if you want to use reliable queue implementation.\n
    \ $settings['queue_default'] = 'queue.redis_reliable';\n  // Use this to only
    use Redis for a specific queue (aggregator_feeds in this case).\n  $settings['queue_service_aggregator_feeds']
    = 'queue.redis';\n  // Or if you want to use reliable queue implementation.\n
    \ $settings['queue_service_aggregator_feeds'] = 'queue.redis_reliable';\n}\n\n/**\n
    * Load local development override configuration, if available.\n *\n * Use settings.local.php
    to override variables on secondary (staging,\n * development, etc) installations
    of this site. Typically used to disable\n * caching, JavaScript/CSS compression,
    re-routing of outgoing emails, and\n * other things that should not happen on
    development and testing sites.\n *\n * Keep this code block at the end of this
    file to take full effect.\n */\nif (getenv('ENVIRONMENT') != 'production' && file_exists($app_root
    . '/' . $site_path . '/settings.' . getenv('ENVIRONMENT') . '.php')) {\n  include
    $app_root . '/' . $site_path . '/settings.' . getenv('ENVIRONMENT') . '.php';\n}\n\n//
    These settings fix https://gitlab.cern.ch/webservices/webframeworks-planning/-/issues/271\n//
    with the patch from https://www.drupal.org/project/drupal/issues/2833539#comment-12574515\n//
    See: https://www.drupal.org/project/drupal/issues/1650930\n// if ($db_driver ===
    'mysql') {\n// $databases['default']['default']['init_commands']['isolation']
    = \"SET SESSION tx_isolation='READ-COMMITTED'\";\n$databases['default']['default']['init_commands']['lock_wait_timeout']
    = \"SET SESSION innodb_lock_wait_timeout = 20\";\n$databases['default']['default']['init_commands']['wait_timeout']
    = \"SET SESSION wait_timeout = 600\";\n// }\n\n"
kind: ConfigMap
metadata:
  name: drupalsite-operator-sitebuilder
